{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-with-images-index-mdx-8da81bea217696e3bf91.js","mappings":"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","sources":["webpack://Priya's Digiverse/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://Priya's Digiverse/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://Priya's Digiverse/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://Priya's Digiverse/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://Priya's Digiverse/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://Priya's Digiverse/./content/posts/with-images/index.mdx","webpack://Priya's Digiverse/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h3: \"h3\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"In this article, we will try to understand the TCP 3-way handshake in very simple words. TCP 3-way handshake is nothing but the start of a conversation between two computers talking to each other.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://cdn.hashnode.com/res/hashnode/image/upload/v1693845931255/f643190a-25d0-4d26-9095-951ef5d13707.png\",\n    alt: \"TCP-3-Way-Handshake\"\n  }), \"\\n\", React.createElement(_components.p, null, \"So how do computers manage to communicate with each other across the vast internet? It's a bit like making a phone call or talking to a friend on a walkie-talkie. Just like you and your friend need to agree on when to start chatting, computers follow a similar process called the \\\"TCP three-way handshake\\\" before they can exchange data.\"), \"\\n\", React.createElement(_components.p, null, \"Let's dive a little deeper into this process:\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.strong, null, \"Step 1: \\\"Hey, Are You There?\\\" (SYN)\")), \"\\n\", React.createElement(_components.p, null, \"![](\", React.createElement(_components.a, {\n    href: \"https://cdn.hashnode.com/res/hashnode/image/upload/v1693846412502/e698c308-d4ab-402b-b212-1fd2df78ce28.png\"\n  }, \"https://cdn.hashnode.com/res/hashnode/image/upload/v1693846412502/e698c308-d4ab-402b-b212-1fd2df78ce28.png\"), \" align=\\\"center\\\")\"), \"\\n\", React.createElement(_components.p, null, \"Imagine you want to talk to your friend using a walkie-talkie. Before you start sharing exciting news, you need to make sure your friend is listening. So, you press the button and say, \\\"Hey, are you there?\\\" This is like the first step of the TCP handshake.\"), \"\\n\", React.createElement(_components.p, null, \"In computer terms, this step is called \", React.createElement(_components.strong, null, \"\\\"SYN\\\" (Synchronize)\"), \". Your computer sends a TCP packet with a \\\"SYN\\\" flag set to 1, which means it wants to initiate a connection. This packet also includes a \", React.createElement(_components.strong, null, \"sequence number (SEQ)\"), \", which is like a unique identifier for the conversation. It's like sending a letter with a specific code on it to your friend.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.strong, null, \"Step 2: \\\"Yes, I'm Here!\\\" (SYN-ACK)\")), \"\\n\", React.createElement(_components.p, null, \"![](\", React.createElement(_components.a, {\n    href: \"https://cdn.hashnode.com/res/hashnode/image/upload/v1693846450173/51c105df-4082-4d9c-851f-98e0f3a044d4.png\"\n  }, \"https://cdn.hashnode.com/res/hashnode/image/upload/v1693846450173/51c105df-4082-4d9c-851f-98e0f3a044d4.png\"), \" align=\\\"center\\\")\"), \"\\n\", React.createElement(_components.p, null, \"Your friend hears your question and thinks, \\\"Sure, I'm here, and I'm ready to listen.\\\" So, they press their walkie-talkie button and respond, \\\"Yes, I'm here!\\\" This is the second step of the TCP handshake.\"), \"\\n\", React.createElement(_components.p, null, \"In computer language, this step is also a \\\"SYN\\\" (Synchronize) message, but it's combined with an \", React.createElement(_components.strong, null, \"\\\"ACK\\\" (Acknowledgment)\"), \". The receiving computer sends back a TCP packet with both \\\"SYN\\\" and \\\"ACK\\\" flags set to 1. This means it acknowledges your request to connect and also wants to initiate a connection back to your computer. It's like your friend saying, \\\"I got your message, and I'm here too!\\\"\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"This response packet also includes its own unique sequence number. Now both computers have sequence numbers to keep track of the data they will exchange.\")), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.strong, null, \"Step 3: \\\"Let's Start Talking\\\" (ACK)\")), \"\\n\", React.createElement(_components.p, null, \"![](\", React.createElement(_components.a, {\n    href: \"https://cdn.hashnode.com/res/hashnode/image/upload/v1693846480334/3a7441c0-15ce-4e79-a988-f6c8060a11ac.png\"\n  }, \"https://cdn.hashnode.com/res/hashnode/image/upload/v1693846480334/3a7441c0-15ce-4e79-a988-f6c8060a11ac.png\"), \" align=\\\"center\\\")\"), \"\\n\", React.createElement(_components.p, null, \"Now that both you and your friend know that you're ready to chat, you can start sharing your stories. You unmute your walkie-talkies, and the conversation flows. This is just like the final step of the TCP handshake.\"), \"\\n\", React.createElement(_components.p, null, \"In computer terms, this step is an \\\"ACK\\\" (Acknowledgment) message. Both computers send TCP packets with the \\\"ACK\\\" flag set to 1. This means they've received the acknowledgement from the other side and are ready to exchange data. They've agreed to start talking and sharing information.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"And just like that, the TCP three-way handshake is complete!\"), \" It's like a friendly introduction before computers can have a proper conversation. It ensures that both computers are on the same page, have exchanged sequence numbers, and are ready to share information securely.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/priya730.github.io/priya730.github.io/content/posts/with-images/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","p","img","h3","strong","_provideComponents","components","alt","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}